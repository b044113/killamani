services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    container_name: killamani-postgres-dev
    environment:
      POSTGRES_USER: killamani
      POSTGRES_PASSWORD: dev_password_123
      POSTGRES_DB: killamani_dev
    ports:
      - "5432:5432"
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
    networks:
      - killamani-dev-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: killamani-redis-dev
    ports:
      - "6379:6379"
    networks:
      - killamani-dev-network

  # Backend API (FastAPI) - Development Mode
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    container_name: killamani-backend-dev
    environment:
      # Database
      DATABASE_URL: postgresql://killamani:dev_password_123@postgres:5432/killamani_dev

      # Redis
      REDIS_URL: redis://redis:6379/0

      # JWT
      JWT_SECRET_KEY: dev-secret-key-not-for-production
      JWT_ALGORITHM: HS256
      JWT_ACCESS_TOKEN_EXPIRE_MINUTES: 60
      JWT_REFRESH_TOKEN_EXPIRE_DAYS: 30

      # Astro Calculator
      CALCULATOR_PROVIDER: kerykeion
      DEFAULT_HOUSE_SYSTEM: placidus

      # Storage
      STORAGE_PROVIDER: local
      STORAGE_PATH: /app/storage

      # Interpreter
      INTERPRETER_PROVIDER: rule_based

      # App
      ENVIRONMENT: development
      LOG_LEVEL: debug
      CORS_ORIGINS: "*"
      RELOAD: "true"

    ports:
      - "8000:8000"
    volumes:
      # Mount source code for hot reload
      - ./backend/src:/app/src
      - ./backend/tests:/app/tests
      - chart_storage_dev:/app/storage
      - ./backend/logs:/app/logs
    depends_on:
      - postgres
      - redis
    networks:
      - killamani-dev-network
    command: uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload

  # Frontend (Vite + React) - Development Mode
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    container_name: killamani-frontend-dev
    environment:
      VITE_API_URL: http://localhost:8000
      VITE_APP_NAME: Killamani
      VITE_ENV: development
      CHOKIDAR_USEPOLLING: "true"  # For hot reload on Windows
    ports:
      - "3000:3000"
    volumes:
      # Mount source code for hot reload
      - ./frontend/src:/app/src
      - ./frontend/public:/app/public
      - ./frontend/package.json:/app/package.json
      - /app/node_modules  # Prevent overwriting node_modules
    depends_on:
      - backend
    networks:
      - killamani-dev-network
    stdin_open: true
    tty: true
    command: npm run dev

  # PgAdmin (Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: killamani-pgadmin-dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@killamani.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - killamani-dev-network
    profiles:
      - tools

  # Redis Commander (Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: killamani-redis-commander-dev
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    networks:
      - killamani-dev-network
    profiles:
      - tools

  # Mailhog (Email Testing)
  mailhog:
    image: mailhog/mailhog:latest
    container_name: killamani-mailhog-dev
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - killamani-dev-network
    profiles:
      - tools

volumes:
  postgres_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local
  chart_storage_dev:
    driver: local

networks:
  killamani-dev-network:
    driver: bridge
