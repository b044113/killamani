"""Initial database schema

Revision ID: b6a8edf2c442
Revises: 
Create Date: 2025-10-22 20:40:12.393169

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b6a8edf2c442'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.Column('role', sa.Enum('ADMIN', 'CONSULTANT', 'CLIENT', 'USER', name='userrole'), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_first_login', sa.Boolean(), nullable=False),
    sa.Column('preferred_language', sa.String(length=10), nullable=False),
    sa.Column('consultant_id', sa.UUID(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['consultant_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_table('audit_logs',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('action', sa.String(length=50), nullable=False),
    sa.Column('entity_type', sa.String(length=50), nullable=False),
    sa.Column('entity_id', sa.UUID(), nullable=True),
    sa.Column('audit_metadata', sa.JSON(), nullable=False),
    sa.Column('ip_address', sa.String(length=45), nullable=True),
    sa.Column('user_agent', sa.String(length=500), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_audit_logs_action'), 'audit_logs', ['action'], unique=False)
    op.create_index(op.f('ix_audit_logs_entity_id'), 'audit_logs', ['entity_id'], unique=False)
    op.create_index(op.f('ix_audit_logs_timestamp'), 'audit_logs', ['timestamp'], unique=False)
    op.create_index(op.f('ix_audit_logs_user_id'), 'audit_logs', ['user_id'], unique=False)
    op.create_table('clients',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('consultant_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('first_name', sa.String(length=100), nullable=False),
    sa.Column('last_name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=True),
    sa.Column('birth_date', sa.DateTime(), nullable=False),
    sa.Column('birth_city', sa.String(length=100), nullable=False),
    sa.Column('birth_country', sa.String(length=10), nullable=False),
    sa.Column('birth_timezone', sa.String(length=50), nullable=False),
    sa.Column('birth_latitude', sa.Float(), nullable=True),
    sa.Column('birth_longitude', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['consultant_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_clients_consultant_id'), 'clients', ['consultant_id'], unique=False)
    op.create_table('natal_charts',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('solar_set', sa.JSON(), nullable=False),
    sa.Column('interpretations', sa.JSON(), nullable=False),
    sa.Column('house_system', sa.String(length=20), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=False),
    sa.Column('svg_url', sa.String(length=500), nullable=True),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_natal_charts_client_id'), 'natal_charts', ['client_id'], unique=False)
    op.create_table('solar_returns',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('natal_chart_id', sa.UUID(), nullable=False),
    sa.Column('return_year', sa.Integer(), nullable=False),
    sa.Column('return_datetime', sa.DateTime(), nullable=False),
    sa.Column('location_city', sa.String(length=100), nullable=False),
    sa.Column('location_country', sa.String(length=10), nullable=False),
    sa.Column('location_latitude', sa.Float(), nullable=True),
    sa.Column('location_longitude', sa.Float(), nullable=True),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('solar_set', sa.JSON(), nullable=False),
    sa.Column('interpretations', sa.JSON(), nullable=False),
    sa.Column('house_system', sa.String(length=20), nullable=False),
    sa.Column('is_relocated', sa.Boolean(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=False),
    sa.Column('svg_url', sa.String(length=500), nullable=True),
    sa.Column('pdf_url', sa.String(length=500), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['natal_chart_id'], ['natal_charts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_solar_returns_client_id'), 'solar_returns', ['client_id'], unique=False)
    op.create_index(op.f('ix_solar_returns_return_year'), 'solar_returns', ['return_year'], unique=False)
    op.create_table('transits',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('client_id', sa.UUID(), nullable=False),
    sa.Column('natal_chart_id', sa.UUID(), nullable=False),
    sa.Column('transit_date', sa.DateTime(), nullable=False),
    sa.Column('data', sa.JSON(), nullable=False),
    sa.Column('significant_aspects', sa.JSON(), nullable=False),
    sa.Column('active_transits', sa.JSON(), nullable=False),
    sa.Column('interpretations', sa.JSON(), nullable=False),
    sa.Column('calculated_at', sa.DateTime(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['clients.id'], ),
    sa.ForeignKeyConstraint(['natal_chart_id'], ['natal_charts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_transits_client_id'), 'transits', ['client_id'], unique=False)
    op.create_index(op.f('ix_transits_transit_date'), 'transits', ['transit_date'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_transits_transit_date'), table_name='transits')
    op.drop_index(op.f('ix_transits_client_id'), table_name='transits')
    op.drop_table('transits')
    op.drop_index(op.f('ix_solar_returns_return_year'), table_name='solar_returns')
    op.drop_index(op.f('ix_solar_returns_client_id'), table_name='solar_returns')
    op.drop_table('solar_returns')
    op.drop_index(op.f('ix_natal_charts_client_id'), table_name='natal_charts')
    op.drop_table('natal_charts')
    op.drop_index(op.f('ix_clients_consultant_id'), table_name='clients')
    op.drop_table('clients')
    op.drop_index(op.f('ix_audit_logs_user_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_timestamp'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_entity_id'), table_name='audit_logs')
    op.drop_index(op.f('ix_audit_logs_action'), table_name='audit_logs')
    op.drop_table('audit_logs')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
